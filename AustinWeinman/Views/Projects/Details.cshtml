@model AustinWeinman.Models.Project

@{
    ViewBag.Title = "Details";
}

@*<h2 class="red-color">Details</h2>*@

<div class="row">
    @Html.HiddenFor(model => model.Id)
    <div class="col-md-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="row">
                    <div class="col-md-4">
                        <input type="button" onclick="goToProjectsDetails(@Model.Id,'Previous')" value="Previous" class="linkbtn" />
                        <input type="button" onclick="goToProjectsDetails(@Model.Id,'Next')" value="Next" class="linkbtn" />
                    </div>
                    <div class="col-md-4 col-md-offset-4">
                        <input type="submit" value="Save" class="linkbtn pull-right" /><input type="button" value="Back to List" class="linkbtn  pull-right" onclick="goToPrevious('@ViewBag.ReturnUrl')" />
                    </div>
                </div>
                <hr />
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StoreNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.StoreNumber, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PropertType, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.PropertType, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProjectManagerName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.ProjectManagerName, new { @class = "form-control" })
                                @*@Html.EditorFor(model => model.ProjectManager, new { htmlAttributes = new { @class = "form-control" } })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RealStateManagerName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.RealStateManagerName, new { @class = "form-control" })
                            </div>
                        </div>


                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ParaLegalName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.ParaLegalName, new { @class = "form-control" })

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Sitesuperintendent, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.Sitesuperintendent, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                <div class="">
                                    @Html.DisplayFor(model => model.Status, new { @class = "form-control" })
                                    @*@Html.EditorFor(model => model.Status)*@
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ArchitectName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.ArchitectName, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CivilEngineerName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.CivilEngineerName, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TrafficEngineerName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.TrafficEngineerName, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConstructionType, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.ConstructionType, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MunicipalityName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.MunicipalityName, new { @class = "form-control" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.StoreOpenDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.StoreOpenDate, new { htmlAttributes = new { @class = "form-control date" } })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">


                        <div class="form-group">
                            @Html.LabelFor(model => model.TaxParcelId, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.TaxParcelId, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TenantReferenceName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.TenantReferenceName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PropertyPurchaseDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.PropertyPurchaseDate, new { htmlAttributes = new { @class = "form-control date" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStoreAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.FinalStoreAddress, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStoreCity, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.FinalStoreCity, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStoreState, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.FinalStoreState, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStoreZip, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.FinalStoreZip, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStoreCountry, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.FinalStoreCountry, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStorePhone, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8  displayname">
                                @Html.DisplayFor(model => model.FinalStorePhone, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<div class="tab-container">
    <!-- Nav tabs -->
    <div class="row">
        <div class="col-md-12" id="linkContainer">
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active"><a href="#home" aria-controls="home" role="tab" data-toggle="tab" value="AOS">AOS</a></li>
                <li role="presentation"><a href="" aria-controls="profile" role="tab" data-toggle="tab" value="Entity">Entity</a></li>
                <li role="presentation"><a href="" aria-controls="messages" role="tab" data-toggle="tab" value="Lease">Lease</a></li>
                <li role="presentation"><a href="" aria-controls="settings" role="tab" data-toggle="tab" value="Loan">Loan</a></li>
                <li role="presentation"><a href="" aria-controls="settings" role="tab" data-toggle="tab" value="Seller">Seller</a></li>
            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <!-- Tab panes -->
            <div class="tab-content">
                <div id="subdataContainer">
                    @Html.Action("AOS", new { ID = Model.Id })
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {

    <script>
        $(document).on('click', '#linkContainer>ul>li>a', function () {
            //debugger;
            var id = $('#Id').val();

            var val = $(this).attr('value');

            val = val.toUpperCase();
            switch(val)
            {
                case "AOS":
                    $('#subdataContainer').load('/Projects/AOS/'+id);
                    break;
                case "ENTITY":
                    $('#subdataContainer').load('/Projects/Entity/' + id);
                    break;
                case "LEASE":
                    $('#subdataContainer').load('/Projects/Lease/' + id);
                    break;
                case "LOAN":
                    $('#subdataContainer').load('/Projects/Loan/' + id);
                    break;
                case "SELLER":
                    $('#subdataContainer').load('/Projects/Seller/' + id);
                    break;
            }
        });

        function goToProjectsDetails(id,direction)
        {

            if(direction.toUpperCase()=="NEXT")
            {
                id=id+1;       
            }
            else
            {
                id=id-1;                    
            }
            
            if(id>0)
            {
                // debugger;
                var url=window.location.href;
                var returnUrl="";
                var urlarr=url.split('&');
                for(i=0;i<urlarr.length;i++)
                {
                    if(urlarr[i].includes('returnUrl'))
                    {
                        returnUrl=urlarr[i];
                        break;
                    }

                }


                window.location.href='/Projects/details?id='+id+'&'+returnUrl;
                //goToCreate(");                        
            }
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
