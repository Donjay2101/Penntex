@model AustinWeinman.Models.Project

@{
    ViewBag.Title = "Create";
}
<div class="row">
    @Html.HiddenFor(model=>model.Id)
    <div class="col-md-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Project</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StoreNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.StoreNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StoreNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PropertType, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.PropertType, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProjectManager, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.ProjectManager,ViewBag.ProjectManager as List<SelectListItem>, "select--", new { @class = "form-control" })
                                @*@Html.EditorFor(model => model.ProjectManager, new { htmlAttributes = new { @class = "form-control" } })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RealStateManager, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.RealStateManager,ViewBag.RealEstate as IEnumerable<SelectListItem>, "select--", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ParaLegal, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.ParaLegal,ViewBag.Paralegal as List<SelectListItem>, "select--", new { @class = "form-control" })

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Sitesuperintendent, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Sitesuperintendent,ViewBag.Sitesuperintendent as  List<SelectListItem>, "select--", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.DropDownListFor(model=>model.Status,ViewBag.Status as List<SelectListItem>,"select--",new { @class="form-control"})
                                    @*@Html.EditorFor(model => model.Status)*@
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Architect, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Architect, ViewBag.Architect as List<SelectListItem>, "select--", new { @class = "form-control" })       </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CivilEngineer, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.CivilEngineer, ViewBag.CivilEngineer as List<SelectListItem>, "select--", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TrafficEngineer, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                           @Html.DropDownListFor(model => model.TrafficEngineer,ViewBag.TrafficEngineer as List<SelectListItem>, "select--", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConstructionType, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.ConstructionType,ViewBag.ConstructionType as List<SelectListItem>, "select--", new { @class = "form-control" })           
                              </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Municipality, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Municipality,ViewBag.Municipality as List<SelectListItem>, "select--", new { @class = "form-control" })
                            </div>
                            </div>
                        

                        <div class="form-group">
                            @Html.LabelFor(model => model.StoreOpenDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.StoreOpenDate, new { htmlAttributes = new { @class = "form-control date" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TaxParcelId, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.TaxParcelId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TaxParcelId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TenantReferenceName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.TenantReferenceName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TenantReferenceName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PropertyPurchaseDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.PropertyPurchaseDate, new { htmlAttributes = new { @class = "form-control date" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStoreAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FinalStoreAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FinalStoreAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStoreCity, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FinalStoreCity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FinalStoreCity, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStoreState, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FinalStoreState, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FinalStoreState, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStoreZip, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FinalStoreZip, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FinalStoreZip, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStoreCountry, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FinalStoreCountry, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FinalStoreCountry, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FinalStorePhone, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FinalStorePhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FinalStorePhone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>


              

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-8">
                        <input type="submit" value="Save" class="btn btn-default" />@Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
        

           
       
    </div>
        }
</div>
            </div>

<div class="row" id="linkContainer">
    <a  value="AOS">AOS</a>
    <a value="Entity">Entity</a>
    <a value="Lease">Lease</a>
    <a value="Loan">Loan</a>
    <a value="Seller">Seller</a>
</div>
<div class="row" id="subdataContainer">
    @Html.Action("AOS",new { ID=Model.Id})
</div>
@section Scripts {

    <script>
        $(document).on('click', '#linkContainer>a', function () {
            debugger;
            var id = $('#Id').val();

            var val = $(this).attr('value');

            val = val.toUpperCase();
            switch(val)
            {
                case "AOS":
                    $('#subdataContainer').load('/Projects/AOS/'+id);
                    break;
                case "ENTITY":
                    $('#subdataContainer').load('/Projects/Entity/' + id);
                    break;
                case "LEASE":
                    $('#subdataContainer').load('/Projects/Lease/' + id);
                    break;
                case "LOAN":
                    $('#subdataContainer').load('/Projects/Loan/' + id);
                    break;
                case "SELLER":
                    $('#subdataContainer').load('/Projects/Seller/' + id);
                    break;
            }
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
